name: Android Build AAB (v8.3.3 Self-Repair + Intelligent Auto-Rerun)
on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
    steps:
      - name: 🧩 Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup Java 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: ⚙️ Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: 📦 Install npm dependencies (auto-repair)
        run: |
          npm ci || npm install --force
          npm audit fix || true

      - name: 🧹 Validate Gradle Wrapper
        run: |
          chmod +x android/gradlew
          ./android/gradlew --version

      - name: 🏗️ Build Android App Bundle
        run: |
          cd android
          ./gradlew clean bundleRelease --no-daemon
        continue-on-error: true

      - name: 🧠 Self-Repair Step
        if: failure()
        run: |
          echo "⚠️ Build failed – activating self-repair routine..."
          cd android
          rm -rf ~/.gradle/caches ~/.gradle/daemon ~/.gradle/native
          ./gradlew clean bundleRelease --stacktrace --no-daemon || true

      - name: ✅ Verify Build Result
        run: |
          if [ ! -f "android/app/build/outputs/bundle/release/app-release.aab" ]; then
            echo "❌ AAB not found after self-repair. Exiting."
            exit 1
          fi
          echo "✅ Build succeeded or recovered after self-repair."

      - name: 📤 Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: SoulSync-AAB-v8.3.3
          path: android/app/build/outputs/bundle/release/app-release.aab

  auto-rerun:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ needs.build.result == 'failure' }}
    steps:
      - name: 🔄 Intelligent Auto-Rerun (limit 2)
        uses: actions/github-script@v7
        with:
          script: |
            const rerunCount = parseInt(process.env.RERUN_COUNT || "0");
            if (rerunCount < 2) {
              console.log(`🔁 Re-running build (attempt ${rerunCount + 1}/2)...`);
              await github.rest.actions.createWorkflowDispatch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: "build-aab-v8.3.3.yml",
                ref: "main",
                inputs: { RERUN_COUNT: (rerunCount + 1).toString() }
              });
            } else {
              console.log("❌ Max reruns reached (2). No further retries.");
            }
