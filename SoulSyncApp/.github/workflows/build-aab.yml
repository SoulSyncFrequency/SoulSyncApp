name: Android Build AAB

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: android-aab-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Ensure lockfile exists
        run: |
          if [ ! -f package-lock.json ] && [ -f package.json ]; then
            echo "⚙️  package-lock.json missing — generating..."
            npm install --package-lock-only --legacy-peer-deps
          fi

      - name: Clean and install deps
        run: |
          rm -rf node_modules || true
          npm ci --legacy-peer-deps || npm install --legacy-peer-deps

      - name: Build web (Vite/React)
        run: npm run build || echo "No web build script — continuing..."

      - name: Install Capacitor CLI
        run: npm install -g @capacitor/cli

      - name: Sync Capacitor Android
        run: npx cap sync android

      - name: Setup Java & Gradle
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Ensure gradlew is executable
        run: chmod +x android/gradlew || true

      - name: Auto-bump Gradle version
        run: |
          cd android
          FILE="app/build.gradle"
          VERSION_CODE=$(grep versionCode $FILE | awk '{print $2}')
          NEW_CODE=$((VERSION_CODE+1))
          sed -i "s/versionCode .*/versionCode ${NEW_CODE}/" $FILE
          echo "Bumped versionCode → ${NEW_CODE}"

      - name: Build AAB
        run: |
          cd android
          ./gradlew bundleRelease

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: android/app/build/outputs/bundle/release/*.aab

  release:
    runs-on: ubuntu-latest
    needs: build
    if: contains(github.event.head_commit.message, 'release')

    steps:
      - uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config user.name "SoulSyncFrequency"
          git config user.email "soulsyncfrequency@gmail.com"

      - name: Auto-tag version
        run: |
          LATEST=$(git describe --tags --abbrev=0 2>/dev/null || echo "v400")
          NEXT="v$(( ${LATEST//[!0-9]/} + 1 ))"
          echo "NEXT=$NEXT" >> $GITHUB_ENV
          git tag "$NEXT"
          git push origin "$NEXT"
          echo "Created tag $NEXT"

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app-release
          path: release

      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.NEXT }}
          name: "SoulSyncApp ${{ env.NEXT }}"
          files: release/*.aab
          body: "Automated CI/CD build and release."
