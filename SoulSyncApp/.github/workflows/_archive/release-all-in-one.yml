name: release-all-in-one
on:
  push:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
    tags:
      - 'v*'
jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      RELEASE_VERSION: ${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install (workspaces)
        run: npm ci --workspaces

      # --- Build FRONTEND (with sourcemaps + release define) ---
      - name: Build frontend
        working-directory: ./frontend
        env:
          VITE_RELEASE: ${{ env.RELEASE_VERSION }}
        run: npm run build

      # --- Upload sourcemaps to Sentry (optional) ---
      - name: Upload sourcemaps to Sentry
        if: ${{ secrets.SENTRY_AUTH_TOKEN != '' }}
        uses: getsentry/action-upload-sourcemaps@v2
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        with:
          org: ${{ secrets.SENTRY_ORG }}
          project: ${{ secrets.SENTRY_PROJECT }}
          release: ${{ env.RELEASE_VERSION }}
          sourcemaps: ./frontend/dist
          finalize: true

      # --- Build BACKEND ---
      - name: Build backend
        working-directory: ./backend
        env:
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
        run: npm run build

      # --- Generate & publish SDK (optional publish) ---
      - name: Generate SDK from OpenAPI
        working-directory: ./packages/sdk-rest
        run: npm run gen

      - name: Build SDK
        working-directory: ./packages/sdk-rest
        run: npm run build

      - name: Publish SDK to GitHub Packages
        if: ${{ secrets.GITHUB_PACKAGES_TOKEN != '' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_PACKAGES_TOKEN }}
        working-directory: ./packages/sdk-rest
        run: |
          npm config set //npm.pkg.github.com/:_authToken ${NODE_AUTH_TOKEN}
          npm publish || true

      # --- Optional Render deployments via deploy hooks ---
      - name: Deploy backend on Render
        if: ${{ secrets.RENDER_BACKEND_DEPLOY_HOOK != '' }}
        run: curl -fsSL -X POST "${{ secrets.RENDER_BACKEND_DEPLOY_HOOK }}"

      - name: Deploy frontend on Render
        if: ${{ secrets.RENDER_FRONTEND_DEPLOY_HOOK != '' }}
        run: curl -fsSL -X POST "${{ secrets.RENDER_FRONTEND_DEPLOY_HOOK }}"
