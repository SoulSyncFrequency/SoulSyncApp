apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "soulsync.fullname" . }}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: {{ include "soulsync.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "soulsync.name" . }}
    spec:
      containers:
        - name: backend
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 3000
          env:
            - name: NODE_ENV
              value: {{ .Values.env.NODE_ENV | quote }}
            - name: ADMIN_PURGE_ENABLED
              value: {{ .Values.env.ADMIN_PURGE_ENABLED | quote }}
            - name: ADMIN_UI_ENABLED
              value: {{ .Values.env.ADMIN_UI_ENABLED | quote }}
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "soulsync.fullname" . }}-secrets
                  key: REDIS_URL
            - name: ADMIN_TOKENS
              valueFrom:
                secretKeyRef:
                  name: {{ include "soulsync.fullname" . }}-secrets
                  key: ADMIN_TOKENS
            - name: METRICS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "soulsync.fullname" . }}-secrets
                  key: METRICS_TOKEN
          readinessProbe:
            httpGet:
              path: /readyz
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
          securityContext:
            runAsUser: 1001
            runAsNonRoot: true
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: logs
              mountPath: /app/logs
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
        - name: logs
          emptyDir: {}
