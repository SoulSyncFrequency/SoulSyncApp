worker_processes  1;
events { worker_connections  1024; }
http {
    map $ENABLE_PRELOAD_HEADERS $add_preload { default 0; "true" 1; }

    # Optional COOP/COEP (enable via env)
    if ($COOP_COEP_ENABLED = "true") {
        add_header Cross-Origin-Opener-Policy "same-origin" always;
        add_header Cross-Origin-Embedder-Policy "require-corp" always;
    }

  include       mime.types;
  sendfile on;
    # Enable compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript application/xml image/svg+xml;
    gzip_min_length 1024;
    # Brotli (if module available)
    brotli on;
    brotli_comp_level 5;
    brotli_types text/plain text/css application/json application/javascript application/xml image/svg+xml;
    gzip on;
    gzip_types text/plain text/css application/json application/javascript application/xml image/svg+xml;
    gzip_min_length 1024;
  server {

    # Strict CSP for API docs
    location /api/docs {
        add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline'; script-src 'self'; img-src 'self' data:" always;
    }
    location /api/redoc {
        add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline'; script-src 'self'; img-src 'self' data:" always;
    }

    add_header Content-Security-Policy "default-src 'self'; connect-src 'self' https://sentry.io; img-src 'self' data: https://sentry.io; script-src 'self' 'unsafe-inline' https://browser.sentry-cdn.com";
    listen 80;
    server_name _;

    add_header X-Frame-Options "DENY" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    add_header Content-Security-Policy "default-src 'self'; img-src 'self' data:; script-src 'self'; style-src 'self' 'unsafe-inline'; connect-src 'self' https:; frame-ancestors 'none';" always;

    root /usr/share/nginx/html;
    index index.html;

    location / {
        if ($add_preload) {
            add_header Link "</static/js/main.js>; rel=preload; as=script" always;
            add_header Link "</static/css/main.css>; rel=preload; as=style" always;
        }
{
        add_header Content-Security-Policy "default-src 'self'; img-src 'self' data: https:; style-src 'self' 'unsafe-inline'; script-src 'self' 'wasm-unsafe-eval'; connect-src 'self' https: wss:" always;
    }

    location / {
      try_files $uri /index.html;
    }
    # Cache static assets for a year (hashed filenames)
    location ~* \.(js|css|png|jpg|jpeg|svg|ico)$ {
      add_header Cache-Control "public, max-age=31536000, immutable";
    }
    # Do not cache HTML
    location ~* \.html$ {
      add_header Cache-Control "no-store";
    }
    
      try_files $uri /index.html;
    }
  }
}
