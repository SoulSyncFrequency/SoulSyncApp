services:
  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_DB: therapy
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d therapy"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    env_file:
      - ./backend/.env.example
    environment:
      - DATABASE_URL=postgres://app:app@db:5432/therapy
    depends_on:
      db:
        condition: service_healthy
      chem:
        condition: service_started

  chem:
    restart: unless-stopped
    build:
      context: ./chem-microservice
      dockerfile: Dockerfile.prod

  web:
    restart: unless-stopped
    build:
      context: ./frontend

  proxy:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./ops/nginx/nginx.ssl.conf:/etc/nginx/nginx.conf:ro
      - certbot-webroot:/var/www/certbot
      - letsencrypt:/etc/letsencrypt
    depends_on:
      - backend
      - web

  certbot:
    image: certbot/certbot
    volumes:
      - certbot-webroot:/var/www/certbot
      - letsencrypt:/etc/letsencrypt
    entrypoint: /bin/sh
    command: -c "trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot --deploy-hook 'nginx -s reload' && echo 'Renew checked'; sleep 12h; done"

volumes:
  pgdata:
  certbot-webroot:
  letsencrypt:
