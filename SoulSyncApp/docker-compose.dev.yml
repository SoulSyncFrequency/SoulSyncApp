version: "3.9"
services:
  db:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: devpass
      POSTGRES_USER: devuser
      POSTGRES_DB: soulsync
    ports: ["5432:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devuser"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports: ["6379:6379"]
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      NODE_ENV: development
      PORT: 3000
      POSTGRES_URL: postgresql://devuser:devpass@db:5432/soulsync
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev_jwt_secret_please_change
      REFRESH_SECRET: dev_refresh_secret_please_change
    ports: ["3000:3000"]
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: ["npm","run","start:worker"]
    environment:
      NODE_ENV: development
      POSTGRES_URL: postgresql://devuser:devpass@db:5432/soulsync
      REDIS_URL: redis://redis:6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  db_data: {}
